<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-configuration PUBLIC
	"-//Hibernate/Hibernate Configuration DTD 3.0//EN"
	"http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd">

<hibernate-configuration>
	<session-factory>
		<!-- 操作连接mysql的数据信息 -->
		<property name="hibernate.connection.driver_class">com.mysql.jdbc.Driver</property>
		<property name="hibernate.connection.url">jdbc:mysql://10.100.210.34:3306/autost_mockserver</property>
		<property name="hibernate.connection.username">autostreets</property>
		<property name="hibernate.connection.password">autostreets</property>
		<!-- 配置hibernate的方言，通知hibernate要连接哪种数据库（mysql），将该数据库类型识别成hibernate能够识别的类型 -->
		<property name="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</property>
		<!-- 是否通过配置文件（hbm.xml）的配置生成数据库的表
		  update：当表不存在的时候，自动创建表，并往表中追加数据
		         当表存在的时候，不会删除表再创建表，而是直接向表中追加数据
		  create：每次在操作数据库（CRUD）的时候，都会先删除表，在创建表，项目不能使用，这样历史数据将不被保存
		  none：不能自动创建表，每次操作数据库的时候，直接将数据保存到数据库，历史数据不丢失
		 -->
		<property name="hibernate.hbm2ddl.auto">update</property>
		<!-- 是否在开发的过程中显示sql语句，默认是false -->
		<property name="hibernate.show_sql">true</property>
		<!-- 是否对显示的sql语句进行格式化，默认是false -->
		<property name="hibernate.format_sql">false</property>
		
		<!-- 等价于configuration.addClass(Customer.class); -->
		<mapping resource="hbconfig/Protocol.hbm.xml"/>
		<mapping resource="hbconfig/Mocksite.hbm.xml"/>
		<mapping resource="hbconfig/API.hbm.xml"/>
		<mapping resource="hbconfig/Paraandresult.hbm.xml"/>		
	</session-factory>
</hibernate-configuration>